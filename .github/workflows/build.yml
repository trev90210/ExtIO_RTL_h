name: CMake

on:
  # Trigger the workflow on push or pull request - but only for the main branch
  push:
    branches:
      - master
    tags-ignore:
      - 'v*'
  pull_request:
    branches:
      - master

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-on-windows:
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    # windows-latest or windows-2022 fail!?
    runs-on: windows-latest

    steps:

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2
        submodules:  recursive

    - name: Configure Visual Studio and CMake
      working-directory: ${{runner.workspace}}
      run: |
          #cmd.exe /c dir "c:\Program Files (x86)\Microsoft Visual Studio/installer"
          #cmd.exe /c dir "c:\Program Files (x86)\Microsoft Visual Studio/shared"
          #cmd.exe /c dir "c:\Program Files (x86)\Microsoft Visual Studio 14.0/SDK"
          #cmd.exe /c dir "c:\Program Files\Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/build"
          #cmd.exe /c dir "c:\Program Files\Microsoft Visual Studio 14.0/common7"
          # setup the compiler
          cmd.exe /c "call `"C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat`" && set > %temp%\vcvars.txt"
          Get-Content "$env:temp\vcvars.txt" | Foreach-Object { if ($_ -match "^(.*?)=(.*)$") { Set-Content "env:\$($matches[1])" $matches[2] } }
          # run cmake, looks v141_xp Toolset requires VS 2019
          cmake -G "Visual Studio 14.0 2022" -A Win32 -S ExtIO_RTL -B build_ExtIO_RTL

    - name: Build
      working-directory: ${{runner.workspace}}
      shell: bash
      run: cmake --build build_ExtIO_RTL --config $BUILD_TYPE --target ExtIO_RTL

    #- name: Dir Listing
    #  working-directory: ${{runner.workspace}}
    #  shell: bash
    #  run: find . >src_listing.txt

    - name: Collect files to distribute
      working-directory: ${{runner.workspace}}
      shell: bash
      run: |
        cp "${{runner.workspace}}/ExtIO_RTL/README.md" ./
        cp "${{runner.workspace}}/ExtIO_RTL/COPYING" ./LICENSE
        cp "${{runner.workspace}}/build_ExtIO_RTL/Release/ExtIO_RTL.dll" ./

    - name: package and upload
      uses: actions/upload-artifact@v4
      with:
        name: extio_rtl
        path: |
            ${{runner.workspace}}/ExtIO_RTL.dll
            ${{runner.workspace}}/README.md
            ${{runner.workspace}}/LICENSE

